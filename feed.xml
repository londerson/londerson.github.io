<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2019-03-07T21:00:00-03:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Safe operator</title>
    <link rel="alternate" href="http://blog.url.com/2019/03/08/safe-operator.html"/>
    <id>http://blog.url.com/2019/03/08/safe-operator.html</id>
    <published>2019-03-07T21:00:00-03:00</published>
    <updated>2019-03-08T15:53:16-03:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h4 id="safe-operator---ruby-23"&gt;Safe operator - Ruby 2.3&lt;/h4&gt;

&lt;p&gt;Algumas vezes há necessidade de verificar se um determinado método de um determinado objeto existe. Em ruby, para realizar essa operação
(antes do &lt;code&gt;safe operator&lt;/code&gt;) fazíamos o seguinte:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; if person &amp;amp;&amp;amp; person.name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dessa forma, saberíamos se existia um objeto &lt;code&gt;person&lt;/code&gt; e se nele havia também um método &lt;code&gt;name&lt;/code&gt;. Ademais, caso &lt;code&gt;person&lt;/code&gt; fosse &lt;code&gt;nil&lt;/code&gt;,
e fizéssemos uma chamada método &lt;code&gt;name&lt;/code&gt;, o retorno seria um erro: &lt;code&gt;NoMethodError: undefined method&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; nil.name # NoMethodError: undefined method ‘name’ for nil:NilClass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Contudo, com a ajuda do &lt;code&gt;ActiveSuport&lt;/code&gt; do framework &lt;code&gt;Rails&lt;/code&gt;, ou seja, não é uma ação nativa da linguagem,
poderíamos verificar da seguinte forma:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; person.try(:name)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Caso o objeto ou o método não existissem, o retorno não seria um &lt;code&gt;NoMethodError&lt;/code&gt; e sim um &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Após o lançamento do Ruby 2.3, o operador &lt;code&gt;safe navigator&lt;/code&gt; foi adicionado, e podemos verificar de maneira similar ao método &lt;code&gt;try&lt;/code&gt;
do &lt;code&gt;Active Suport&lt;/code&gt;, utilizando apenas o ampersand (&amp;amp;) antes de chamar o método:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; person&amp;amp;.name
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;

&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;

</content>
  </entry>
</feed>
